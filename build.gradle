plugins {
  id "com.moowork.node" version "0.13"  // the node plugin
}

node {
  // Version of node to use.  
  // Advantage: define which node-version to use, project-wide, 
  // Advantage: loads node like a dependency, solves distribution to devs
  version = '7.0.0'

  // Version of npm to use.
  npmVersion = '3.10.9'

  // If true, it will download node using above parameters.
  // If false, it will try to use globally installed node.
  download = true
}

def nodeModulesBinDirectory = "./node_modules/.bin/";

// Alternative 1: execute npm run script as NpmTask
// Advantages: NPM 
task buildCss(type: NpmTask) {
  inputs.files fileTree(dir: 'src', include: '**/*.less')
  outputs.files files(['dist/app.css', 'dist/app.css.map'])
  args = ['run', 'build:css']
}
buildCss.dependsOn npmInstall

// Alternative 2: implement the same in Gradle 
// Advantages: no NPM scripts, use Gradle only (incremental, watch, parallel)
// Disadvatage: duplicate
task buildCssWithoutNpmScript(type:Exec) {
  inputs.files fileTree(dir: 'src', include: '**/*.less')
  outputs.files files(['dist/app.css', 'dist/app.css.map'])
  commandLine nodeModulesBinDirectory+'lessc.cmd', 'src/app.less', 'dist/app.css', '--clean-css', '--no-ie-compat', '--source-map'
}
buildCssWithoutNpmScript.dependsOn npmInstall

task buildJs(type:NpmTask) {
  inputs.files fileTree(dir: 'src', include: '**/*.js')
  inputs.files file("rollup.config.js")
  outputs.files files(['dist/app.js', 'dist/app.js.map'])
  args = ['run', 'build:js']
}
buildJs.dependsOn npmInstall

// run "gradle nodeVersion" to get the 
task nodeVersion(type: NodeTask) {
  script = file("version.js")
  args = ['--version'] 
}